<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Willian&#39;s Notes</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>业精于勤,荒于嬉</description>
    <pubDate>Mon, 05 Mar 2018 17:44:08 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>2小时搭建github+hexo博客</title>
      <link>http://yoursite.com/2016/03/24/2%E5%B0%8F%E6%97%B6%E6%90%AD%E5%BB%BAgithub-hexo%E5%8D%9A%E5%AE%A2/</link>
      <guid>http://yoursite.com/2016/03/24/2%E5%B0%8F%E6%97%B6%E6%90%AD%E5%BB%BAgithub-hexo%E5%8D%9A%E5%AE%A2/</guid>
      <pubDate>Thu, 24 Mar 2016 15:26:23 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;搭建基本Hexo博客&quot;&gt;&lt;a href=&quot;#搭建基本Hexo博客&quot; class=&quot;headerlink&quot; title=&quot;搭建基本Hexo博客&quot;&gt;&lt;/a&gt;搭建基本Hexo博客&lt;/h3&gt;&lt;p&gt;Hexo博客基本搭建参考：&lt;a href=&quot;https://www.jian
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="搭建基本Hexo博客"><a href="#搭建基本Hexo博客" class="headerlink" title="搭建基本Hexo博客"></a>搭建基本Hexo博客</h3><p>Hexo博客基本搭建参考：<a href="https://www.jianshu.com/p/e99ed60390a8" target="_blank" rel="noopener">《20分钟教你使用hexo搭建github博客》</a>一文，笔者按照教程的顺序一步一步来，是没有出现错误的，如果读者们在搭建的时候遇到了问题不知如何解决，笔者会尽自己所能帮助读者，并将遇到的问题及解决方法附在文章下方。</p><h3 id="Hexo博客绑定域名"><a href="#Hexo博客绑定域名" class="headerlink" title="Hexo博客绑定域名"></a>Hexo博客绑定域名</h3><p>关于Hexo博客如何绑定自己的域名，详情可参阅<a href="https://www.jianshu.com/p/cea41e5c9b2a" target="_blank" rel="noopener">《hexo搭建的Github博客绑定域名》</a>一文。</p><h3 id="更换Hexo主题"><a href="#更换Hexo主题" class="headerlink" title="更换Hexo主题"></a>更换Hexo主题</h3><p>笔者更换后的主题为NexT，其Github网址为：<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> 。首先将NexT的主题源文件下载到本地，使用Git克隆指令如下：</p><p><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></p><p>下载后，将压缩包解压缩，复制其中名称为next的文件夹到Hexo的主题目录下，主题目录的路径为：</p><p><code>Hexo博客根目录/themes/</code></p><p>效果如下图所示：</p><img src="/2016/03/24/2小时搭建github-hexo博客/1.png"><center>NexT主题包</center>在Hexo根目录下有一个以_config.yml命名的文件（下称站点配置文件），用Sublime等文本编辑器打开，在其中找到theme属性，将其由landscape改为next。<img src="/2016/03/24/2小时搭建github-hexo博客/2.png"><center>修改主题</center>然后在Hexo根目录执行部署Hexo指令：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 清理缓存</span><br><span class="line">hexo clean</span><br><span class="line">// 生成文件</span><br><span class="line">hexo generate</span><br><span class="line">// 部署</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>便可以在远程的博客上看到修改主题后的样式了。</p><img src="/2016/03/24/2小时搭建github-hexo博客/3.png"><center>NexT主题样式</center><h3 id="设置Hexo主题模式"><a href="#设置Hexo主题模式" class="headerlink" title="设置Hexo主题模式"></a>设置Hexo主题模式</h3><p>看到上图，读者可能会产生疑问，为什么自己的主题样式和笔者的不一样，这是因为在Hexo主题中，有三种不同的模式，通过切换模式，让NexT主题显示不一样的样式。在NexT根目录下有一个同样名称为_config.yml，为了区分hexo根目录下的_config.yml，将前者称为主题配置文件，在其中找到scheme属性，如下图所示：</p><img src="/2016/03/24/2小时搭建github-hexo博客/4.png"><center>scheme属性</center><p>NexT主题默认使用Muse模式，读者可根据自己的喜好，选择其中一种模式。</p><h3 id="设置预览摘要"><a href="#设置预览摘要" class="headerlink" title="设置预览摘要"></a>设置预览摘要</h3><p>设置完模式后，读者们会发现，尽管首页显示的是所有文章的列表，但是每一篇文章都显示了所有内容，这样感觉看起来不舒服，这时候可以启用预览摘要模式，在主题配置文件中找到auto_excerpt属性，将enable设置为true ，将length设置为想要预览到的字数，如下图所示：</p><img src="/2016/03/24/2小时搭建github-hexo博客/5.png"><center>设置预览摘要</center><p>设置完毕后，调用部署指令，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 清理缓存</span><br><span class="line">hexo clean</span><br><span class="line">// 生成文件</span><br><span class="line">hexo generate</span><br><span class="line">// 部署</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><blockquote><p> <strong>这里说明一下</strong>： 上述的部署指令中hexo deploy可以换成hexo server，两者的区别在于，前者是将博客部署到远程的Github上，而后者是运行在本地，通过<a href="http://localhost:4000在浏览器中访问。后者是为了调试配置方便而使用，但是最终本地博客还是需要hexo" target="_blank" rel="noopener">http://localhost:4000在浏览器中访问。后者是为了调试配置方便而使用，但是最终本地博客还是需要hexo</a> deploy指令将其部署至Github上。</p></blockquote><h3 id="添加评论功能"><a href="#添加评论功能" class="headerlink" title="添加评论功能"></a>添加评论功能</h3><p>NexT目前出到5.1.0版本，功能模块已经相当的丰富。NexT主题集成了评论系统，只需要设置相关的属性即可实现功能，其目前支持多说、Disqus、Facebook评论、Hyper评论、网页云跟帖等，其中“多说”是NexT推荐的评论系统，但是多说评论系统不稳定，经常会出现服务异常的问题，如下图所示：</p><img src="/2016/03/24/2小时搭建github-hexo博客/6.png"><p>“多说”服务异常</p><p>所以笔者查阅了网上，找到了另一款名为友言的评论系统，它也是NexT已经集成好的，可以直接拿来用的。下面对其操作进行讲解：</p><h4 id="注册友言账号"><a href="#注册友言账号" class="headerlink" title="注册友言账号"></a>注册友言账号</h4><p>打开<a href="http://www.uyan.cc/" target="_blank" rel="noopener">友言</a>官网，单击“注册”按钮后，按照套路可完成账号注册。</p><h4 id="获取uid"><a href="#获取uid" class="headerlink" title="获取uid"></a>获取uid</h4><p>注册完登录后，在首页单击“后台管理”按钮进入后台界面便可看到自己的用户ID，将其复制下来。</p><img src="/2016/03/24/2小时搭建github-hexo博客/7.png"><p>获取uid</p><h4 id="主题配置文件设置uid"><a href="#主题配置文件设置uid" class="headerlink" title="主题配置文件设置uid"></a>主题配置文件设置uid</h4><p>打开主题配置文件，在其中找到属性<code>youyan_uid</code>，然后在:后添加之前复制的uid，如下图所示：</p><img src="/2016/03/24/2小时搭建github-hexo博客/8.png"><center>Paste_Image.png</center><p><strong>这里强调一下</strong>：所有属性的设置，其:后必须有一个空格。</p><p>然后部署一下Hexo，可以在本地或远程看到实现的评论功能，如下图所示：</p><img src="/2016/03/24/2小时搭建github-hexo博客/9.png"><center>友言评论功能</center><p>在笔者配置评论功能的时候，笔者遇到了一个问题：本地博客有评论功能，而远程博客却没有 。折腾了一下午，始终不知道其原因所在。后来，当笔者对博客绑定自己的域名后，发现远程的博客自动出现了评论功能，这里不清楚是域名的缘故 还是网络延迟 的缘故。若读者们遇到这个情况，可以放放，先配置其他功能。</p><h3 id="添加打赏功能"><a href="#添加打赏功能" class="headerlink" title="添加打赏功能"></a>添加打赏功能</h3><p>打赏是读者对笔者支持的最大动力，作为经常写博客的笔者来说，打赏功能如果在自己的博客中出现，那真的是求之不得呀（虽然基本不会有人来打赏）！而NexT正好集成了打赏的功能，其实现的思路是放上收款二维码，让读者扫码后支付。笔者添加了微信支付和支付宝支付，所以以此为例：</p><h4 id="获取微信收款二维码"><a href="#获取微信收款二维码" class="headerlink" title="获取微信收款二维码"></a>获取微信收款二维码</h4><p>微信二维码的获取途径还是比较容易的，按照这个<a href="https://jingyan.baidu.com/article/b907e627b641b646e6891c6b.html" target="_blank" rel="noopener">教程</a>即可实现，读者们也可以预先设置收款的金额。</p><h4 id="获取支付宝收款二维码"><a href="#获取支付宝收款二维码" class="headerlink" title="获取支付宝收款二维码"></a>获取支付宝收款二维码</h4><p>笔者上网查了很多关于支付宝收款二维码的相关信息，奈何得到的结果不是版本不一致就是商家认证，找了好久，终于找到一个符合要求的<a href="http://blog.csdn.net/china8848/article/details/53504223" target="_blank" rel="noopener">教程</a>，读者们可别被“商家平台”这几个字吓到了，普通用户一样可以开通，且不需要相关证件的认证，读者们可根据这个教程获得自己的支付宝收款二维码。</p><h4 id="添加二维码图片资源"><a href="#添加二维码图片资源" class="headerlink" title="添加二维码图片资源"></a>添加二维码图片资源</h4><p>得到二维码图片资源后，读者们可将二维码图片放到NexT根目录/source/images/文件夹下。</p><h4 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h4><p>找到主题配置文件，在其最后添加打赏的配置信息:</p><p>reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！<br>wechatpay: 图片链接或图片相对路径<br>alipay: 图片链接或图片相对路径<br>其信息如下图所示：</p><img src="/2016/03/24/2小时搭建github-hexo博客/10.png"><center>开启打赏功能</center>然后部署一下Hexo，便可实现打赏功能，效果图如下：<img src="/2016/03/24/2小时搭建github-hexo博客/11.jpeg"><p>打赏功能效果图</p><h3 id="设置侧边栏显示效果"><a href="#设置侧边栏显示效果" class="headerlink" title="设置侧边栏显示效果"></a>设置侧边栏显示效果</h3><p>鉴于个人喜好，笔者不是很喜欢在打开一篇文章的时候，刚想好好品读，却因为侧边栏的出现扰乱视觉，所以想对其进行设置。</p><img src="/2016/03/24/2小时搭建github-hexo博客/12.gif"><center>侧边栏在文章加载好时出现</center>在主题配置文件中，找到`sidebar`的`display`属性，display属性有四种显示模式：分别为：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post    // 默认显示方式</span><br><span class="line">always  // 一直显示</span><br><span class="line">hide    // 初始隐藏</span><br><span class="line">remove  // 移除侧边栏</span><br></pre></td></tr></table></figure><p>笔者将其设置为hide模式，如下图所示：</p><img src="/2016/03/24/2小时搭建github-hexo博客/13.png"><center>设置侧边栏显示效果</center>读者们可根据个人喜好进行设置。<h3 id="添加菜单选项"><a href="#添加菜单选项" class="headerlink" title="添加菜单选项"></a>添加菜单选项</h3><p>默认情况下，菜单导航栏有首页、归档、关于三个选项，除此之外笔者还添加了分类、标签和关于。在主题配置文件中，找到menu属性，并去掉<code>categories</code>、 <code>tags</code>、<code>about</code>的的注释，如下图所示：</p><img src="/2016/03/24/2小时搭建github-hexo博客/14.png"><center>菜单选项设置</center>然后在Hexo根目录执行指令如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;categories&quot;</span><br><span class="line">// 添加标签页面</span><br><span class="line">hexo new page “tags”</span><br><span class="line">// 添加关于页面</span><br><span class="line">hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure><p>执行完上述指令后，在Hexo根目录<code>/source/</code>文件夹下创建三个文件夹，命名分别为：categories、tags、about文件夹，在这些文件夹中分别会创建一个以<code>index</code>命名的<code>Markdown</code>文件，对这三个Markdown文件内容进行修改，使之分别为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2017-03-12 22:06:24</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2017-03-12 17:27:16</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: about</span><br><span class="line">date: 2017-03-12 22:07:26</span><br><span class="line">type: &quot;about&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>完成文件的修改，然后部署Hexo即可完成菜单选项的添加。</p><h3 id="添加搜索功能"><a href="#添加搜索功能" class="headerlink" title="添加搜索功能"></a>添加搜索功能</h3><img src="/2016/03/24/2小时搭建github-hexo博客/15.png"><center>导航菜单栏</center><p>完成了上述菜单选项的添加后，读者们可以看到菜单栏中还有搜索一项，搜索的功能源于第三方服务——Algolia，接下来看看配置的步骤：</p><h4 id="注册Algolia，创建Index"><a href="#注册Algolia，创建Index" class="headerlink" title="注册Algolia，创建Index"></a>注册Algolia，创建Index</h4><p>在<a href="https://leancloud.cn/" target="_blank" rel="noopener">Algolia</a>官网注册一个账户，完成账户注册后，创建一个Index，如下图：</p><img src="/2016/03/24/2小时搭建github-hexo博客/16.png"><center>创建Index</center><h4 id="安装Hexo-Algolia"><a href="#安装Hexo-Algolia" class="headerlink" title="安装Hexo Algolia"></a>安装Hexo Algolia</h4><p>在Hexo根目录执行如下指令，进行Hexo Algolia的安装：</p><p><code>npm install --save hexo-algolia</code></p><p>执行完指令后，读者们可能会发现安装失败，或发现安装成功后实现的搜索功能可以搜索但是不可以点击搜索到的文章，这是因为5.1.0版本NexT在<code>package.json</code>文件的配置中存在错误。<br>到Hexo的根目录，在其中找到<code>package.json</code>文件，修改其中的<code>hexo-algolia</code>属性值为<code>^0.2.0</code>，如下图所示：</p><img src="/2016/03/24/2小时搭建github-hexo博客/17.png"><center>修改package.json文件</center><p><code>&quot;hexo-algolia&quot;: &quot;^0.2.0&quot;</code><br>然后再执行上述的安装指令。</p><h4 id="获取Key，修改站点配置"><a href="#获取Key，修改站点配置" class="headerlink" title="获取Key，修改站点配置"></a>获取Key，修改站点配置</h4><p>完成Hexo Algolia后，回到Algolia官网的Dashboard，在左侧导航栏选择API Keys一项，跳转到如下图所示的页面。</p><img src="/2016/03/24/2小时搭建github-hexo博客/18.png"><center>获取Key</center>基于这个页面的Key，编辑站点配置文件，在文件内容最后添加如下图所示的信息，包括  `ApplicationID`、`Search-Only API Key`、 `Admin API Key和indexName`，其中`apiKey`就是`Search-Only API Key`：<img src="/2016/03/24/2小时搭建github-hexo博客/19.png"><center>Algolia配置信息</center><h4 id="更新Index"><a href="#更新Index" class="headerlink" title="更新Index"></a>更新Index</h4><p>配置好Key后，在Hexo根目录执行<code>hexo algolia</code>来更新Index，若出现如下图所示，则表示更新成功：</p><center>更新Index</center><p>若更新失败，则返回上面安装<strong>Hexo Algolia</strong>的步骤，查看一下hexo-algolia是否安装成功，并核实一下package.json信息是否正确。</p><h4 id="启用配置搜索功能"><a href="#启用配置搜索功能" class="headerlink" title="启用配置搜索功能"></a>启用配置搜索功能</h4><p>修改主题配置文件，在其中找到algolia_search属性，将其enable子属性改为true，然后再看其labels子属性，修改相应的提示文本，使之更加适合自己的风格，属性配置如下图所示：</p><img src="/2016/03/24/2小时搭建github-hexo博客/21.png"><center>启用配置搜索功能</center><p>经过上述的操作后，部署Hexo，便可在博客中添加搜索功能，其效果图如下：</p><img src="/2016/03/24/2小时搭建github-hexo博客/22.png"><center>找到搜索结果</center><img src="/2016/03/24/2小时搭建github-hexo博客/23.png"><center>未找到搜索结果</center><h3 id="添加阅读次数统计"><a href="#添加阅读次数统计" class="headerlink" title="添加阅读次数统计"></a>添加阅读次数统计</h3><p>笔者以为，写技术博客一方面作为个人知识积累外，更重要的是让读者通过阅读有所收获，而阅读数量作为一篇文章质量好坏的重要参考因素，可以为作者继续文章创作带来信心。抱着这份理解，笔者给自己的博客添加了查看阅读数量的功能。阅读次数统计是基于第三方服务——LeanCloud实现的，其配置详情如下：</p><h4 id="创建LeanCloud账号"><a href="#创建LeanCloud账号" class="headerlink" title="创建LeanCloud账号"></a>创建LeanCloud账号</h4><p>进入<a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>官网，按照套路完成注册，这里不做赘述。</p><h4 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h4><p>注册并登录LeanCloud后，进入控制台，单击“创建应用”按钮进行应用的创建，输入新应用名称，选择开发版，单击“创建”按钮完成创建，如下图所示：</p><img src="/2016/03/24/2小时搭建github-hexo博客/24.png"><center>创建应用</center><h4 id="创建Class"><a href="#创建Class" class="headerlink" title="创建Class"></a>创建Class</h4><p>进入到刚刚创建的应用中，选择左侧导航栏的“存储”，然后点击“创建Class”，为了与NexT形成配置关系，将Class名称填为<code>Counter</code>，并选择无限制选项，然后单击“创建Class”按钮完成Class的创建，如下图所示：</p><img src="/2016/03/24/2小时搭建github-hexo博客/25.png"><center>创建Class</center><p>点击刚刚创建的Counter，其实质是一张结构表，用来记录文章的浏览量，如下图所示，这里的表可以直接对文章阅读次数进行修改，所以如果想要追求阅读次数的读者可以在表上直接进行修改。</p><img src="/2016/03/24/2小时搭建github-hexo博客/26.png"><center>Counter表</center><h4 id="配置Key"><a href="#配置Key" class="headerlink" title="配置Key"></a>配置Key</h4><p>在左侧导航栏的设置界面，单击“应用Key”可以看到应用的App ID和App Key。</p><img src="/2016/03/24/2小时搭建github-hexo博客/27.png"><center>Key</center><p>复制ID和Key，然后将其配置到主题配置文件中，在文件中找到leancloud_visitors属性，将enable设置为true，然后将之前复制的ID和Key粘贴到相应的属性中。</p><img src="/2016/03/24/2小时搭建github-hexo博客/28.png"><center>配置ID和Key</center><p>至此，阅读次数统计添加完成，其效果图如下所示：</p><img src="/2016/03/24/2小时搭建github-hexo博客/29.png"><center>添加阅读次数统计</center><h3 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h3><p>笔者之前虽听过RSS这个名词，但至今不知其为何物、何以用之，望知晓的读者在文章下方留言评论，指点一二。笔者表示对RSS不明觉厉，觉得有必要添加上，提升一下逼格，所以接下来看看RSS功能的添加：</p><h4 id="安装-hexo-generator-feed-插件"><a href="#安装-hexo-generator-feed-插件" class="headerlink" title="安装 hexo-generator-feed 插件"></a>安装 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 插件</h4><p>RSS需要有一个Feed链接，而这个链接需要靠hexo-generator-feed插件来生成，所以第一步需要添加插件，在Hexo根目录执行安装指令：<br><code>npm install hexo-generator-feed --save</code></p><h4 id="配置feed信息"><a href="#配置feed信息" class="headerlink" title="配置feed信息"></a>配置feed信息</h4><p>在站点配置文件中追加如下图所示的信息：</p><img src="/2016/03/24/2小时搭建github-hexo博客/30.png"><center>RSS配置</center><p>feed属性下的各个子属性的含义借用feed官方英文解释如下：</p><ul><li>type - Feed type. (atom/rss2)</li><li>path - Feed path. (Default: atom.xml/rss2.xml)</li><li>limit - Maximum number of posts in the feed (Use 0 or false to show all posts)</li><li>hub - URL of the PubSubHubbub hubs (Leave it empty if you don’t use it)</li><li>content - (optional) set to ‘true’ to include the contents of the entire post in the feed.<br>如此这般，RSS功能添加完成，效果图如下：</li></ul><center>RSS效果</center>单击RSS按钮，跳转如下界面：<img src="/2016/03/24/2小时搭建github-hexo博客/32.png"><center>RSS跳转结果</center><h3 id="添加社交链接"><a href="#添加社交链接" class="headerlink" title="添加社交链接"></a>添加社交链接</h3><p>笔者希望在个人博客中加入自己的简书和Github链接以提高访问量，接下来了解一下社交链接如何添加：</p><h4 id="添加链接"><a href="#添加链接" class="headerlink" title="添加链接"></a>添加链接</h4><p>在主题配置文件中找到<code>social</code>属性，在其下方添加社交链接，其格式为：<br><code>社交平台名称：链接</code><br>笔者添加的内容如下图所示：</p><img src="/2016/03/24/2小时搭建github-hexo博客/33.png"><center>添加社交链接</center><h4 id="添加链接图标"><a href="#添加链接图标" class="headerlink" title="添加链接图标"></a>添加链接图标</h4><p>读者们可根据自己喜好，启用显示链接的图标，链接的图标全部来自于<a href="https://link.jianshu.com/?t=http%3A%2F%2Ffontawesome.io%2F" target="_blank" rel="noopener">Font Awesome</a> ，其配置方式也很简单，在主题配置文件中找到social_icons，修改其状态值为true，然后配置对应链接的图标，其格式为：<br>社交平台名称: Font Awesome中的图标的名字（区分大小写）<br>如下图所示：</p><img src="/2016/03/24/2小时搭建github-hexo博客/34.png"><center>添加链接图标</center><p>如笔者添加的社交链接中有简书，但是Font Awesome平台没有简书的图标，这时候就会显示默认的图标：</p><img src="/2016/03/24/2小时搭建github-hexo博客/35.png"><center>默认图标</center><p>这里笔者遇到了一个问题，就是笔者启用了图标以后，发现不论Font Awesome平台有没有对应的社交平台的图标，最终显示效果都是默认的图标</p><img src="/2016/03/24/2小时搭建github-hexo博客/36.png"><center>全部显示默认图标的社交链接</center><p>###添加友情链接功能<br>笔者身边有很多志同道合的好友，也都有用其他博客搭建工具如wordpress、jekyll等来搭建自己的博客，写的文章多了，当然希望可以收获更多的流量，这时候好友之间就会互相帮忙，在自己的博客上添加好友的博客链接。接下来看一下如何实现这个功能：</p><p>在主题配置文件中找到links属性，修改<code>links_title</code>属性的值为“友情链接”（也可以是其他文案），然后添加上好友的博客名称和博客地址，其格式如下：<br><code>博客名称: 博客链接</code><br>如下是笔者的配置信息：</p><img src="/2016/03/24/2小时搭建github-hexo博客/37.png"><center>Paste_Image.png</center><p>配置完成后部署Hexo，即可实现友情链接的效果，附图如下：</p><img src="/2016/03/24/2小时搭建github-hexo博客/38.png"><center>友情链接</center><p>写在后面<br>其实笔者本篇文章是在阅读完NexT的官方配置文档后编写的，考虑到文档内容较多，且其中很多功能一般用不到，就挑选了其中比较常用的功能。在阅读官方文档的时候，发现文档中有些地方将主题配置文件与站点配置文件弄混了，因此本篇文章也算是对官方文档中的错误进行更正吧！当然本文肯定有描述不够清楚的地方，读者们有疑问的话，可参阅官方文档进行对比配置，最后附上官方文档的链接供读者们参阅：<br><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">http://theme-next.iissnan.com/</a></p><p>疑难解答<br>密钥生成的位置在哪里？<br>Windows平台：C:/Users/用户名/.ssh/<br>Mac OS平台：~/.ssh/</p><p>.ssh文件找不到<br>.ssh文件以.开头，在一些操作系统中是隐藏文件，需要将隐藏文件设置可见。</p><p>npm install时，出现npm error: RPC failed错误<br>开启翻墙软件，或将重新设置npm镜像为淘宝的npm镜像，修改操作详见：<a href="http://blog.csdn.net/zhy421202048/article/details/53490247" target="_blank" rel="noopener">http://blog.csdn.net/zhy421202048/article/details/53490247</a></p><p>执行hexo deploy指令是出现Deployer not found: git错误<br>在终端或命令行执行指令：</p><p>npm install hexo-deployer-git –save<br>然后执行heo deploy指令。</p><p>第一次hexo deploy以后，远程的博客报出404错误<br>Github中仓库的命名没有按照Github昵称+.github.io的规则来。</p><p>hexo deploy以后，远程的博客没有更新<br>原因是部署延迟后执行hexo deploy指令前为执行hexo generate指令。</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2016/03/24/2%E5%B0%8F%E6%97%B6%E6%90%AD%E5%BB%BAgithub-hexo%E5%8D%9A%E5%AE%A2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>自己动手搭建翻墙服务器</title>
      <link>http://yoursite.com/2016/03/18/%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E6%90%AD%E5%BB%BA%E7%BF%BB%E5%A2%99%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <guid>http://yoursite.com/2016/03/18/%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E6%90%AD%E5%BB%BA%E7%BF%BB%E5%A2%99%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <pubDate>Fri, 18 Mar 2016 14:09:29 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;作为一个新时代的人，真的是离不开Google。但国内大环境如此，访问Google困难重重。但是再难，工作也是要展开的！我们之前还可以通过购买商家们的爬墙服务来实现访问Google，但这阵严打，这类服务商死掉了一大批，很多朋友也平白遭受了损失！以后政策会越来越收紧，能提供此类
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p>作为一个新时代的人，真的是离不开Google。但国内大环境如此，访问Google困难重重。但是再难，工作也是要展开的！我们之前还可以通过购买商家们的爬墙服务来实现访问Google，但这阵严打，这类服务商死掉了一大批，很多朋友也平白遭受了损失！以后政策会越来越收紧，能提供此类服务的商家会越来越少，取得合法资质运营此类业务的商家，其费用估计也是天价。在这种情况下，我推荐大家自行搭梯子翻墙，个人自己搭建自己使用的梯子，不会成为重点打击对象。</p><p><font style="color:red">注：特别说明！此翻墙SS服务器适用于各种常见终端设备(Windows、Mac OS、安卓、IOS等等)…</font></p><p>本教程介绍的并非免费翻墙,需要购买一台境外服务器来作为自己的专用翻墙服务器。本篇教程全程傻瓜化，无任何技术难度，不需要输入任何命令，不需要记住任何代码。</p><p>分三步走，大概花十分钟就能建立起你自己的专用服务器，完全不必觉得这会非常困难。本篇教程以Bandwagonhost(搬瓦工)的 10G KVM – PROMO VPS（本服务器已售完，请选择其它的）为基础，使用 shadowsocks 为梯子程序。</p><p>废话不多说，开始本篇教程。</p><h4 id="购买一台境外服务器用于搭建梯子的服务端"><a href="#购买一台境外服务器用于搭建梯子的服务端" class="headerlink" title="购买一台境外服务器用于搭建梯子的服务端"></a>购买一台境外服务器用于搭建梯子的服务端</h4><p>选择以下套餐 VPS 购买一台：<br>年付 19.99 美元 KVM 架构 VPS （本服务器已售完，请点击选择其它服务器）1 核 CPU 512M 内存 每月 500G 流量&lt;– 本篇教程使用</p><p>说明：以上为搬瓦工在售的四个价格最低的套餐。两个流量更多的不可更换机房的套餐搬瓦工说明为 CHINA DIRECT ROUTE 中国直连路由，但实测意义不大，和普通版 QN 机房几无差别。其流量更大是个优点，不过普通版如果对所在机房网络表现不满意可以很方便的切换到别的机房，而直连路由就无法切换了。各有优缺点，大家自己取舍。</p><img src="/2016/03/18/自己动手搭建翻墙服务器/1.jpg"><p>为什么要选年付呢？因为年付相比每月付款等于 5.5 折！搬瓦工也有 30 天退款保证，觉得不好用再申请退款也可以。</p><img src="/2016/03/18/自己动手搭建翻墙服务器/2.jpg"><p>6 个数据中心可选，建议选择 Los（洛杉矶），离中国距离最近，开通以后也可以随意切换（直连路由套餐无法切换）。选完之后 点击最下面的“Add to Cart”。</p><img src="/2016/03/18/自己动手搭建翻墙服务器/3.jpg"><p>进入到购物车，可以看到结账明细，下面有优惠码输入框 输入“BWH1ZBPVK”6%优惠码 节省一点是一点吧。</p><p>输入之后是这样的之后点“checkout”结账。</p><img src="/2016/03/18/自己动手搭建翻墙服务器/5.jpg"><p>新用户会要求填写一些信息注册账户，全部用拼音如实填写即可。注意地址一定要如实填写，不用写得那么细，但起码要和你所在城市一样，要不检测到 IP 地址与填写城市不一致，会被判欺诈，导致购买失败！</p><img src="/2016/03/18/自己动手搭建翻墙服务器/7.jpg"><p>三种支付方式供选择，哪个方便选哪个吧，本次以某宝为例说明。</p><img src="/2016/03/18/自己动手搭建翻墙服务器/8.jpg"><p>点“Complete Order”后再点“Pay now”。</p><img src="/2016/03/18/自己动手搭建翻墙服务器/9.jpg"><p>跳转到某宝网站选择扫码或登陆账号完成支付。</p><img src="/2016/03/18/自己动手搭建翻墙服务器/10.jpg"><p>支付成功！</p><img src="/2016/03/18/自己动手搭建翻墙服务器/11.jpg"><p>跳转回搬瓦工，显示订单完成，并显示订单号，购买服务器完成！</p><h4 id="搭建-shadowsocks-server-端"><a href="#搭建-shadowsocks-server-端" class="headerlink" title="搭建 shadowsocks server 端"></a>搭建 shadowsocks server 端</h4><p>搬瓦工直接在后台集成了 shadowsokcs，登陆后台就能一键安装，方便小白用户（它知道你们看见命令行会头痛）。</p><img src="/2016/03/18/自己动手搭建翻墙服务器/12.jpg"><p>在用户中心 选择 My Services。</p><img src="/2016/03/18/自己动手搭建翻墙服务器/13.jpg"><p>可以看到你刚才购买的服务器已经激活运行，点击 KiviVM Control Panel 进入 VPS 管理面板，进入面板后你会看到一些服务器的运行信息，如内存使用量，磁盘使用量，流量使用情况等，可能你会看不懂，没关系，略过这些，我们直接安装shadowsocks server 如下图所示！</p><p>注：最近很多新购买的服务器在VPS管理面板没有“shadowsocks server”这一项，若是发生此原因，请按如下操作即可正常安装！若页面中没有Shadowsocks Server这一项，说明一键搭建SS功能被去掉了，这时候需要在当前浏览器的新标签中打开以下网址：<br><a href="https://kiwivm.64clouds.com/main-exec.php?mode=extras_shadowsocks" target="_blank" rel="noopener">https://kiwivm.64clouds.com/main-exec.php?mode=extras_shadowsocks</a><br>，打开以后就是安装页面，点击页面中的Install Shadowsocks Server安装即可(安装前提是服务器已打开已运行)。</p><img src="/2016/03/18/自己动手搭建翻墙服务器/14.jpg"><p>安装成功显示如下：</p><img src="/2016/03/18/自己动手搭建翻墙服务器/15.jpg"><p>Go Back 后就能看到 shadowsocks 的连接信息了，如下图所示：</p><img src="/2016/03/18/自己动手搭建翻墙服务器/16.jpg"><p>shadowsocks 服务端配置完成！</p><h4 id="配置-shadowsocks-本地客户端"><a href="#配置-shadowsocks-本地客户端" class="headerlink" title="配置 shadowsocks 本地客户端"></a>配置 shadowsocks 本地客户端</h4><p>搬瓦工不愧为 Linux 小白挚友，直接在后台就给出了客户端配置教程，我也在这里说下(以下所有文件，如有解压密码，密码均为：<code>www.yigeni.com</code>！</p><p>Android 安卓手机用户：<br>访问 Google Play 商店下载 Shadowsocks-Android。手机里没有 play 商店？无法翻墙？废话…没关系，打开“<a href="http://apps.evozi.com/apk-downloader/" target="_blank" rel="noopener">http://apps.evozi.com/apk-downloader/</a>”，然后将链接“<a href="https://play.google.com/store/apps/details?id=com.github.shadowsocks" target="_blank" rel="noopener">https://play.google.com/store/apps/details?id=com.github.shadowsocks</a>”粘贴进去进行下载，当然也可搜索APK名称进行下载。注：最好使用小编推荐链接下载，第三方其它路径下载可能会出现问题。</p><p>IOS 苹果 Iphone 用户：<br>直接在 Appstore 里选择以下 App 之一安装。shadowsocks 原版免费需要越狱才能使用全功能，要不只是一个支持翻墙的浏览器。shadowrocket 售价 18 元 俗称小火箭，支持全局翻墙，无需越狱。<br>推荐 Wingy 免费，支持全局翻墙，无需越狱，不过近期有朋友反馈不能用了。近期苹果官方已经把中国区的所有 Shadowsocks 应用下架了，如果你的 Iphone 绑定的是中国区的账号，会无法搜索到上述 App，可以把账号更改成美国区账号，就能搜索到了。</p><p>Mac OS 用户：<br>Mac OS X GUI Client，<a href="https://pan.baidu.com/share/init?surl=slhZ9QP" target="_blank" rel="noopener">ShadowsocksX-2.6.3.dmg</a>提取密码：movj，文件解压密码:<code>www.yigeni.com</code>或者<a href="https://pan.baidu.com/share/init?surl=i5nF4HZ" target="_blank" rel="noopener">GoAgentX-v2.2.9.dmg</a>提取密码：wd5h，文件解压密码：<code>www.yigeni.com</code>。</p><p>Windows 用户：<br>Windows XP 和 Windows 7 请下载 <a href="https://pan.baidu.com/share/init?surl=eS8e0Qu" target="_blank" rel="noopener">shadowsocks-win-2.3.zip</a>提取密码：b3nz，文件解压密码：<code>www.yigeni.com</code> 需要 <a href="www.microsoft.com/zh-CN/download/details.aspx?id=21">Microsoft .NET Framework 3.5</a> 支持；</p><p>Windows 8 及 Windows 10 请下载 <a href="https://pan.baidu.com/share/init?surl=eS8e0Qu" target="_blank" rel="noopener">shadowsocks-win-dotnet4.0-2.3.zip</a>提取密码：md1z，文件解压密码：<code>www.yigeni.com</code> 需要 <a href="https://www.microsoft.com/zh-CN/download/details.aspx?id=53344" target="_blank" rel="noopener">Microsoft .NET Framework 4.6.2</a> 支持。</p><p>注意：此工具不是 VPN 之类全局代理，本质上只是一个 Socks5 代理，通过修改系统代理实现翻墙，可能会被 360 卫士或其它电脑安全管家之类的软件静默阻止，造成软件运行出错。运行前请退出某卫士或某管家，或把 SS 客户端加入其白名单！建议最好不要安装某卫士或管家，安装正统的杀毒软件，如卡巴斯基、NOD32、诺顿、McAfee，这些软件都不会对 SS 进行阻止！</p><p>Windows客户端操作：<br>这是绿色软件，下载之后解压就能用，打开 shadowsocks.exe 会看到通知栏有一个纸飞机图标 双击它！</p><img src="/2016/03/18/自己动手搭建翻墙服务器/17.jpg"><p>填入服务端信息后确定，会自己最小化到通知栏，右键单击-启用系统代理（其中“系统代理模式”一般为“PAC模式”，有时可尝试切一切）。</p><img src="/2016/03/18/自己动手搭建翻墙服务器/18.jpg"><p>好了，你可以打开浏览器看下能不能正常访问Google了！</p><img src="/2016/03/18/自己动手搭建翻墙服务器/19.jpg"><p>ok！搞定！</p><p>安卓客户端操作：<br>打开手机SS客户端，点击右上角+号，选择手动设置。<br>在弹出页面中填写你的SS服务器IP、远程端口、密码、加密方式，点击对号保存，如下图：</p><img src="/2016/03/18/自己动手搭建翻墙服务器/20.png"><p>提醒：网上有一些人在售卖或者免费提供SS 帐号(或者所谓的什么加速服务)，我想说的是，你永远不知道电脑那一端的那个陌生人在想些什么，想干什么！使用别人提供的 SS 帐号是有安全隐患的，因为他知道你的加密方式，并且服务端掌握在他手里，他是可以对你的网络通信进行监听的，我们做外贸的，有时信息泄露的后果挺严重的，望大家慎重。</p><p>安全提醒：<br>Shadowsocks 只是一个帮你穿越长城防火墙的小工具，它无法帮你保持匿名！在使用时务必遵守中国（人在中国）和服务器所在地（服务器在美国）的法律！墙外言论纷杂，接收信息时务必保持自己的理性思辨！</p><p>不差钱！不想用美国的服务器，只要速度快！没问题！阿里云HK、LinodeJP 等高富帅服务器欢迎你！</p><p>搬瓦工官网：<a href="https://bwh1.net/" target="_blank" rel="noopener">https://bwh1.net/</a> .<br>最新优惠：<a href="http://banwagong.cn/" target="_blank" rel="noopener">http://banwagong.cn/</a>.<br>其它 Linux VPS 推荐：<a href="https://www.zhihu.com/question/20800554" target="_blank" rel="noopener">https://www.zhihu.com/question/20800554</a>(未测试，仅供参考).</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2016/03/18/%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E6%90%AD%E5%BB%BA%E7%BF%BB%E5%A2%99%E6%9C%8D%E5%8A%A1%E5%99%A8/#disqus_thread</comments>
    </item>
    
    <item>
      <title>24种编程语言的Hello World程序</title>
      <link>http://yoursite.com/2016/03/04/hello-world/</link>
      <guid>http://yoursite.com/2016/03/04/hello-world/</guid>
      <pubDate>Thu, 03 Mar 2016 17:13:23 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;这篇文章主要介绍了 24 种编程语言的 Hello World 程序，包括熟知的 Java、C 语言、C++、C#、Ruby、Python、PHP 等编程语言，需要的朋友可以参考下。&lt;br&gt;Hello World，几乎是程序猿学习各种语言的第一个程序。心血来潮，汇总并整理了
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p>这篇文章主要介绍了 24 种编程语言的 Hello World 程序，包括熟知的 Java、C 语言、C++、C#、Ruby、Python、PHP 等编程语言，需要的朋友可以参考下。<br>Hello World，几乎是程序猿学习各种语言的第一个程序。心血来潮，汇总并整理了下主流开发语言如何实现，包括大致快速了解下这门语言、开发、编译、环境搭建、运行、简单语言等，其实很多语言是有关联的。在当下，只掌握一门语言是不够的，比如说 Python，语言简洁、开发快是其最大优点，但缺点是速度相对较慢，C/C++/Java 开发比较慢，但程序运行速度比较快，如果想兼具两者的优点，就要写Python的扩展，这就涉及到（C、C++、Java、Fortan…）等语言，Python 的 GUI 中 Tkinter 里面又涉及到 TCL 语言，所以就 Python 开发来说，就必须熟悉 C（CPython 就是用 C 开发出来的），最好同时熟悉 Java（Jython、Python 是基于 Java 的实现），C++/C#（IronPython 就是基于 C# 及 .net 的实现），还有不同语言间的通信可能会用到 CORBAL，还有 Python 中可能会调用 SHELL 中的命令，或 Perl 的命令。所以，精通一到两门，熟悉多门语言是必须的。<br>下面用多种语言来实现打印 Hello World，包括所需要的环境（主要是如何编译、链接等）、代码、语言说明、语言特色介绍。<br>并带附录：2014 年编程语言总排行榜前二十名、Web 开发语言排行榜前十名以及移动应用开发语言排行榜前十名。</p><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><p>环境: JDK1.7</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;java -version   </span><br><span class="line">java version <span class="string">"1.7.0_51"</span>  </span><br><span class="line">Java(TM) <span class="function">SE Runtime <span class="title">Environment</span> <span class="params">(build <span class="number">1.7</span><span class="number">.0</span>_51-b13)</span>  </span></span><br><span class="line"><span class="function">Java <span class="title">HotSpot</span><span class="params">(TM)</span> Client <span class="title">VM</span> <span class="params">(build <span class="number">24.51</span>-b03, mixed mode, sharing)</span></span></span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#FileName: HelloWorld.java  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span>   #如果有 <span class="title">public</span> 类的话，类名必须和文件同名，注意大小写  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">  #Java 入口程序，程序从此入口  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span></span><br><span class="line"><span class="function">  </span>&#123;  </span><br><span class="line">  #向控制台打印一条语句  </span><br><span class="line">    System.out.println(<span class="string">"Hello,World!"</span>);  </span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:\HelloWorld&gt;javac HelloWorld.java    #用 javac 编译成字节码文件（HelloWorld.class）  </span><br><span class="line">D:\HelloWorld&gt;java HelloWorld          #用 java 解释执行成特定平台的机器码  </span><br><span class="line">Hello,World!</span><br></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>环境: MinGW 或各种 C++ 编译器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">D:\HelloWorld&gt;gcc -v  </span><br><span class="line">Reading specs from C:/Perl/site/lib/auto/MinGW/bin/../lib/gcc/mingw32/<span class="number">3.4</span>.5/specs  </span><br><span class="line">Configured with: ../gcc-<span class="number">3.4</span>.5-<span class="number">20060117</span>-<span class="number">3</span>/configure --with-gcc --with-gnu-ld --with-gnu-as --host=min  </span><br><span class="line">gw32 --target=mingw32 --prefix=/mingw --enable-threads --disable-nls --enable-languages=c,c++,f77,ad  </span><br><span class="line">a,objc,java --disable-win32-registry --disable-shared --enable-sjlj-exceptions --enable-libgcj --dis  </span><br><span class="line">able-java-awt --without-x --enable-java-gc=boehm --disable-libgcj-debug --enable-interpreter --enabl  </span><br><span class="line">e-hash-synchronization --enable-libstdcxx-debug  </span><br><span class="line">Thread model: win32  </span><br><span class="line">gcc version <span class="number">3.4</span>.5 (mingw-vista special r3)</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>                <span class="meta">#main 入口函数  </span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Hello,World!"</span>); <span class="meta">#printf 函数打印  </span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;               #函数返回值  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">D:\HelloWorld&gt;gcc HelloWorld.c -o output   #文件名 HelloWorld.c，-o 输出文件名 output  </span><br><span class="line">HelloWorld.c:<span class="number">6</span>:<span class="number">2</span>: warning: no newline at end of file  </span><br><span class="line"></span><br><span class="line">D:\HelloWorld&gt;output                       #直接运行输出文件               </span><br><span class="line">Hello,World!</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#如果未安装 GCC，那么必须按照 http://gcc.gnu.org/install/ 上的详细说明安装 GCC。  </span><br><span class="line">#为了在 Windows 上安装 GCC，需要安装 MinGW。</span><br><span class="line">#为了安装 MinGW，请访问 MinGW 的主页 www.mingw.org，进入 MinGW 下载页面，下载最新版本的 MinGW 安装程序，命名格式为 MinGW-&lt;version&gt;.exe。  </span><br><span class="line">#当安装 MinWG 时，至少要安装 gcc-core、gcc-g++、binutils 和 MinGW runtime，但是一般情况下都会安装更多其他的项。    </span><br><span class="line">#添加您安装的 MinGW 的 bin 子目录到您的 PATH 环境变量中，这样您就可以在命令行中通过简单的名称来指定这些工具。    </span><br><span class="line">#当完成安装时，就可以从 Windows 命令行上运行 gcc、g++、ar、ranlib、dlltool 和其他一些 GNU 工具。</span><br></pre></td></tr></table></figure><h2 id="C-1"><a href="#C-1" class="headerlink" title="C++"></a>C++</h2><p>环境: MinGW 或各种 C++ 编译器<br>头文件后缀名：.h、.hpp、.hxx<br>源文件后缀名：.cpp、.c++、.cxx、.cc、.C</p><p>代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;               //std::cout 要用到的头文件  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;                //标准输入输出头文件  </span></span></span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Hello,World!--Way 1\n"</span>);    <span class="comment">//printf 语句打印  </span></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"Hello,World!--Way 2"</span>);        <span class="comment">//puts 语句  </span></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"Hello,"</span> <span class="string">" "</span> <span class="string">"World!--Way 3"</span>); <span class="comment">//字符串拼接  </span></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello,World!--Way 4"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>; <span class="comment">//C++ 教科书上写法  </span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;                                        <span class="comment">//作为注释  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">D:\HelloWorld&gt;g++ HelloWorld.c++ -o output   <span class="comment">//源文件后缀也可为 .cpp、.C  </span></span><br><span class="line">  </span><br><span class="line">D:\HelloWorld&gt;output  </span><br><span class="line">Hello,World!--Way <span class="number">1</span>  </span><br><span class="line">Hello,World!--Way <span class="number">2</span>  </span><br><span class="line">Hello,World!--Way <span class="number">3</span>  </span><br><span class="line">Hello,World!--Way <span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><p>环境: Python 2.x 或 Python 3.x</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:\HelloWorld&gt;python  </span><br><span class="line">Python <span class="number">2.7</span>.4 (<span class="keyword">default</span>, Apr  <span class="number">6</span> <span class="number">2013</span>, <span class="number">19</span>:<span class="number">55</span>:<span class="number">15</span>) [MSC v.1500 <span class="number">64</span> bit (AMD64)] on win32  </span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;&gt; <span class="keyword">print</span> <span class="string">"Hello,World!"</span>   <span class="comment">#Python 2.x  </span></span><br><span class="line">Hello,World!  </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">"Hello,World!"</span>)  <span class="comment">#Python 3.x    </span></span><br><span class="line">Hello,World!</span><br></pre></td></tr></table></figure><p>说明</p><ol><li>在 Python 3.x 中，print 语句是函数，所以为 print()。</li><li>也可以写在 .py 文件中，同样执行。</li><li>python2.6 及以上版本和 python3.x 基本相同，也同样可以使用 print() 来打印。</li></ol><h2 id="C-2"><a href="#C-2" class="headerlink" title="C"></a>C</h2><p>环境: Windows</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">d:\HelloWorld&gt;csc -v  </span><br><span class="line">Microsoft (R) Visual C# 2005 Compiler version 8.00.50727.4927  </span><br><span class="line"><span class="function"><span class="keyword">for</span> <span class="title">Microsoft</span> <span class="params">(R)</span> <span class="title">Windows</span> <span class="params">(R)</span> 2005 Framework version 2.0.50727  </span></span><br><span class="line"><span class="function"><span class="title">Copyright</span> <span class="params">(C)</span> Microsoft Corporation 2001-2005. All rights reserved.</span></span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//FileName: HelloWorld.cs  </span><br><span class="line">using System;  </span><br><span class="line">class TestApp  </span><br><span class="line">&#123;  </span><br><span class="line">  public static void Main()  </span><br><span class="line">  &#123;  </span><br><span class="line">    Console.WriteLine(&quot;Hello,World!&quot;);  </span><br><span class="line">    Console.ReadKey();  </span><br><span class="line">  &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">//执行如下:  </span><br><span class="line">d:\HelloWorld&gt;csc HelloWorld.cs  </span><br><span class="line">Microsoft (R) Visual C# 2005 Compiler version 8.00.50727.4927  </span><br><span class="line">for Microsoft (R) Windows (R) 2005 Framework version 2.0.50727  </span><br><span class="line">Copyright (C) Microsoft Corporation 2001-2005. All rights reserved.  </span><br><span class="line">  </span><br><span class="line">d:\HelloWorld&gt;HelloWorld.exe  </span><br><span class="line">Hello,World!</span><br></pre></td></tr></table></figure><p>说明<br>C# 其实和 Java 非常相像，刚才用的是命令行方式，需要设置环境变量，可以参考：<a href="http://www.jb51.net/article/67171.htm" target="_blank" rel="noopener">http://www.jb51.net/article/67171.htm</a>。<br>如果是直接下载 Microsoft Visual Studio 的话，就可以在 IDE 中用快捷键编译、运行。</p><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><p>环境: XAMPP 1.8.3,环境搭建指南：<a href="http://www.cnblogs.com/wangkangluo1/archive/2011/07/19/2110943.html" target="_blank" rel="noopener">http://www.cnblogs.com/wangkangluo1/archive/2011/07/19/2110943.html</a>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;java -version   </span><br><span class="line">java version <span class="string">"1.7.0_51"</span>  </span><br><span class="line">Java(TM) SE Runtime Environment (build <span class="number">1.7</span><span class="number">.0</span>_51-b13)  </span><br><span class="line">Java HotSpot(TM) Client VM (build <span class="number">24.51</span>-b03, mixed mode, sharing)</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;  </span><br><span class="line">&lt;body&gt;  </span><br><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Hello,World!"</span>;            <span class="comment">//打印语句  </span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"The first php program!"</span>;  <span class="comment">//打印语句  </span></span><br><span class="line"><span class="keyword">echo</span> phpinfo();                 <span class="comment">//phpinfo()系统函数,输出环境信息  </span></span><br><span class="line"><span class="meta">?&gt;</span>  </span><br><span class="line">&lt;/body&gt;  </span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>说明</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#PHP（Hypertext Preprocessor）。  </span></span><br><span class="line"><span class="comment">#PHP 是一种 HTML 内嵌式的语言，PHP 与微软的 ASP 颇有几分相似，都是一种在服务器端执行的嵌入 HTML 文档的脚本语言。  </span></span><br><span class="line"><span class="comment">#PHP 语言的风格类似于 C 语言，现在被很多的网站编程人员广泛地运用。  </span></span><br><span class="line"><span class="comment">#PHP 独特的语法混合了 C、Java、Perl 以及 PHP 自创新的语法。它可以比 CGI 或者 Perl 更快速地执行动态网页。  </span></span><br><span class="line"><span class="comment">#与其他的编程语言相比，PHP 是将程序嵌入到 HTML 文档中去执行，执行效率比完全生成 HTML 标记的 CGI 要高许多。  </span></span><br><span class="line"><span class="comment">#与同样是嵌入 HTML 文档的脚本语言 JavaScript 相比，PHP 在服务器端执行，充分利用了服务器的性能。  </span></span><br><span class="line"><span class="comment">#PHP 执行引擎还会将用户经常访问的 PHP 程序驻留在内存中，其他用户再一次访问这个程序时就不需要重新编译程序了，只要直接执行内存中的代码就可以了，这也是 PHP 高效率的体现之一。  </span></span><br><span class="line"><span class="comment">#PHP 具有非常强大的功能，所有的 CGI 或者 JavaScript 的功能，PHP 都能实现，而且几乎支持所有流行的数据库以及操作系统。</span></span><br></pre></td></tr></table></figure><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><p>环境: node.js 或 jaxer<br>node下载链接: <a href="http://nodejs.org/download/" target="_blank" rel="noopener">http://nodejs.org/download/</a>  按提示，下载自己想要的文件即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;java -version   </span><br><span class="line">java version <span class="string">"1.7.0_51"</span>  </span><br><span class="line">Java(TM) SE Runtime Environment (build <span class="number">1.7</span><span class="number">.0</span>_51-b13)  </span><br><span class="line">Java HotSpot(TM) Client VM (build <span class="number">24.51</span>-b03, mixed mode, sharing)</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var sys = require("sys");    #导入需要的 sys 模块  </span><br><span class="line">sys.puts("Hello,World!");    #调用里面的 puts 函数来打印字符串</span><br></pre></td></tr></table></figure><p>说明</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">D:\&gt;node HelloWorld.js       #node + *.js，执行  </span><br><span class="line">Hello,World!  </span><br><span class="line">#JavaScript 是 Web 的编程语言。  </span><br><span class="line">#所有现代的 HTML 页面都使用 JavaScript。  </span><br><span class="line">#JavaScript 非常容易学。</span><br></pre></td></tr></table></figure><h2 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h2><p>环境: ruby 1.9.3</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">D:\HelloWorld&gt;ruby -v  </span><br><span class="line">ruby <span class="number">1.9</span>.3p429 (<span class="number">2013</span>-<span class="number">05</span>-<span class="number">15</span>) [i386-mingw32]</span><br><span class="line">代码</span><br><span class="line">```Ruby</span><br><span class="line">#可用 print 语句打印  </span><br><span class="line">print <span class="string">"Hello,World!\n"</span>   </span><br><span class="line">#可用 puts 语句打印  </span><br><span class="line">puts  <span class="string">"Hello,World!\n"</span>   </span><br><span class="line">#可以先声明一个变量，然后再用 puts 语句  </span><br><span class="line">a = <span class="string">"Hello,World!\n"</span>     </span><br><span class="line">puts a  </span><br><span class="line">#可以先写个函数再调用  </span><br><span class="line"><span class="function">def <span class="title">say</span><span class="params">(name)</span>  </span></span><br><span class="line"><span class="function">   "Hello,#</span>&#123;name&#125;<span class="string">"  </span></span><br><span class="line"><span class="string">end  </span></span><br><span class="line"><span class="string">puts say("</span>World!<span class="string">")</span></span><br></pre></td></tr></table></figure><p>说明</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">D:</span>\HelloWorld&gt;ruby HelloWorld.rb     <span class="comment">#运行方式类似 Python、Perl  </span></span><br><span class="line">Hello,World!  </span><br><span class="line">Hello,World!  </span><br><span class="line">Hello,World!  </span><br><span class="line">Hello,World!</span><br></pre></td></tr></table></figure><h2 id="R"><a href="#R" class="headerlink" title="R"></a>R</h2><p>环境: R-3.1.2-win（适用于32、64位），分别有相应的 GUI</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;R                  #安装好了之后，输入 R 后显示  </span><br><span class="line">  </span><br><span class="line">R version <span class="number">3.1</span>.2 (<span class="number">2014</span>-<span class="number">10</span>-<span class="number">31</span>) -- <span class="string">"Pumpkin Helmet"</span>  </span><br><span class="line">Copyright (C) <span class="number">2014</span> The R Foundation <span class="keyword">for</span> Statistical Computing  </span><br><span class="line">Platform: i386-w64-mingw32/i386 (<span class="number">32</span>-bit)  </span><br><span class="line">  </span><br><span class="line">R  </span><br><span class="line">  </span><br><span class="line"><span class="string">'license()'</span><span class="string">'licence()'</span>  </span><br><span class="line">  </span><br><span class="line">R.  </span><br><span class="line"><span class="string">'contributors()'</span>  </span><br><span class="line"><span class="string">'citation()'</span>RR  </span><br><span class="line">  </span><br><span class="line"><span class="string">'demo()'</span><span class="string">'help()'</span>  </span><br><span class="line"><span class="string">'help.start()'</span>HTML  </span><br><span class="line"><span class="string">'q()'</span>R.</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"Hello,World!"</span>)</span><br></pre></td></tr></table></figure><p>说明</p><p>R 语言，一种自由软件编程语言与操作环境，主要用于统计分析、绘图、数据挖掘。<br>下面是安装下载比较详细的步骤参见：<br><a href="http://www.jb51.net/os/RedHat/335436.html" target="_blank" rel="noopener">http://www.jb51.net/os/RedHat/335436.html</a></p><h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h2><p>环境: ORACLE SQL/PLUS</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">D:\HelloWorld&gt;ruby -v  </span><br><span class="line">SQL&gt; select 'Hello,World!' from dual;  </span><br><span class="line">  </span><br><span class="line">'HELLO,WORLD  </span><br><span class="line"><span class="comment">------------  </span></span><br><span class="line">Hello,World!</span><br></pre></td></tr></table></figure><p>说明<br>还可以建一个表，插入，再查询，最后删除该表。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; CREATE TABLE MESSAGE (TEXT CHAR(15));            #创建表  </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> MESSAGE (<span class="built_in">TEXT</span>) <span class="keyword">VALUES</span> (<span class="string">'Hello, world!'</span>);  <span class="comment">#插入表  </span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">TEXT</span> <span class="keyword">FROM</span> MESSAGE;                             <span class="comment">#查询表  </span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> MESSAGE;                                   <span class="comment">#删除表               </span></span><br><span class="line">Table created.  </span><br><span class="line">  </span><br><span class="line">SQL&gt;  </span><br><span class="line">1 row created.  </span><br><span class="line">  </span><br><span class="line">SQL&gt;  </span><br><span class="line">TEXT  </span><br><span class="line"><span class="comment">---------------  </span></span><br><span class="line">Hello, world!</span><br></pre></td></tr></table></figure><h2 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a>Perl</h2><p>环境: Perl 5.16 或 MinGW<br>下载 URL：<a href="http://www.activestate.com/activeperl/downloads" target="_blank" rel="noopener">http://www.activestate.com/activeperl/downloads</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">D:\HelloWorld&gt;perl -v  </span><br><span class="line">  </span><br><span class="line">This is perl <span class="number">5</span>, version <span class="number">16</span>, subversion <span class="number">3</span> (v5.16.3) built <span class="keyword">for</span> MSWin32-x86-multi-thread  </span><br><span class="line">(with <span class="number">1</span> registered patch, see perl -V <span class="keyword">for</span> more detail)  </span><br><span class="line">  </span><br><span class="line">Copyright <span class="number">1987</span>-<span class="number">2012</span>, Larry Wall  </span><br><span class="line">  </span><br><span class="line">Binary build <span class="number">1603</span> [<span class="number">296746</span>] provided by ActiveState http:<span class="comment">//www.ActiveState.com  </span></span><br><span class="line">Built Mar <span class="number">13</span> <span class="number">2013</span> <span class="number">11</span>:<span class="number">29</span>:<span class="number">21</span>  </span><br><span class="line">  </span><br><span class="line">Perl may be copied only under the terms of either the Artistic License or the  </span><br><span class="line">GNU General Public License, which may be found in the Perl <span class="number">5</span> source kit.  </span><br><span class="line">  </span><br><span class="line">Complete documentation <span class="keyword">for</span> Perl, including FAQ lists, should be found on  </span><br><span class="line"><span class="keyword">this</span> system using <span class="string">"man perl"</span> or <span class="string">"perldoc perl"</span>.  If you have access to the  </span><br><span class="line">Internet, point your browser at http:<span class="comment">//www.perl.org/, the Perl Home Page.</span></span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!C:\Perl\bin                    #Windows 平台下  </span><br><span class="line">#!/usr/bin/env perl              #Linux 环境下  </span><br><span class="line">print "Hello,World!\n";          #print("Hello,World") 也可</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\HelloWorld&gt;perl HelloWorld.pl #类似于 python file.py  </span><br><span class="line">Hello,World!</span><br></pre></td></tr></table></figure><p>说明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#Perl 5.10 及以上的版本可以用  </span><br><span class="line">use <span class="number">5.010</span>;  </span><br><span class="line">say <span class="string">"Hello,World!"</span>;</span><br></pre></td></tr></table></figure><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>环境: HTML 或 HTML 5.0</p><p>代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is the first program!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello,World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>说明<br>大多数主流浏览器都支持 HTML4.0，有些浏览器只支持 HTML5.0 的部分功能。</p><h2 id="VB"><a href="#VB" class="headerlink" title="VB"></a>VB</h2><p>环境: </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">VBC version <span class="number">8.0</span>.5</span><br><span class="line">D:\Learn\C&gt;vbc -v  </span><br><span class="line">Microsoft (R) Visual Basic Compiler version <span class="number">8.0</span>.50727.5483  </span><br><span class="line"><span class="function"><span class="keyword">for</span> <span class="title">Microsoft</span> <span class="params">(R)</span> .NET Framework version 2.0.50727.5485  </span></span><br><span class="line"><span class="function"><span class="title">Copyright</span> <span class="params">(c)</span> Microsoft Corporation.  All rights reserved.  </span></span><br><span class="line"><span class="function">  </span></span><br><span class="line"><span class="function">vbc : Command line warning BC2007 : unrecognized option 'v'</span>; ignored  </span><br><span class="line">vbc : Command line error BC2008 : no input sources specified</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">'FileName: HelloWorld.rb  rb 作为 VB 源文件的后缀  </span></span><br><span class="line"><span class="keyword">Module</span> Hello    </span><br><span class="line">  <span class="keyword">Sub</span> Main()               <span class="comment">'程序人口函数  </span></span><br><span class="line">    MsgBox(<span class="string">"Hello,World!"</span>) <span class="comment">'计算机屏幕上显示信息  </span></span><br><span class="line">  <span class="keyword">End</span> <span class="keyword">Sub</span>                  <span class="comment">'End 作为程序块结尾  </span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Module</span>                 <span class="comment">'单引号作为注释</span></span><br></pre></td></tr></table></figure><p>说明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">D:\&gt;vbc HelloWorld.vb      #vbs 来编译，生成 HelloWorld.exe 可执行文件  </span><br><span class="line">Microsoft (R) Visual Basic Compiler version <span class="number">8.0</span>.50727.5483  </span><br><span class="line"><span class="function"><span class="keyword">for</span> <span class="title">Microsoft</span> <span class="params">(R)</span> .NET Framework version 2.0.50727.5485  </span></span><br><span class="line"><span class="function"><span class="title">Copyright</span> <span class="params">(c)</span> Microsoft Corporation.  All rights reserved.  </span></span><br><span class="line"><span class="function">D:\&gt;HelloWorld</span></span><br></pre></td></tr></table></figure><h2 id="Scala"><a href="#Scala" class="headerlink" title="Scala"></a>Scala</h2><p>环境: scala-2.11.4.msi 编译器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">d:\&gt;scala  </span><br><span class="line">Welcome to Scala version <span class="number">2.11</span>.4 (<span class="function">Java <span class="title">HotSpot</span><span class="params">(TM)</span> Client VM, Java 1.7.0_51).  </span></span><br><span class="line"><span class="function">Type in expressions to have them evaluated.  </span></span><br><span class="line"><span class="function">Type :help <span class="keyword">for</span> more information.  </span></span><br><span class="line"><span class="function">  </span></span><br><span class="line">scala&gt; println("Hello,World!");   #可在交互式界面执行 println 语句，很像 java  </span><br><span class="line">Hello,World!</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">object HelloWorld  </span><br><span class="line">&#123;  </span><br><span class="line">  <span class="function">def <span class="title">main</span><span class="params">(args:Array[String])</span>   </span></span><br><span class="line"><span class="function">  </span>&#123;  </span><br><span class="line">     println(<span class="string">"Hello,World!"</span>);  </span><br><span class="line">  &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">//编译  </span></span><br><span class="line">d:\HelloWorld&gt;scala HelloWorld.scala  </span><br><span class="line">Hello,World!</span><br></pre></td></tr></table></figure><p>说明<br>Scala 是一门把面向对象和函数式编程思想加入静态类型中的编程语言，志在以简练、优雅及类型安全的方式来表达常用编程模式。它平滑地集成了面向对象和函数语言的特性，使 Java 和其他语言的程序员使用 Scala 时更富有成效。</p><h2 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h2><p>环境: Linux/Unix 平台，或安装了 MinGW 和 MSYS 的 Windows 平台<br>代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>安装了MinGW和MSYS的Windows平台  </span><br><span class="line">D:\HelloWorld&gt;echo "Hello,World!"  </span><br><span class="line">"Hello,World!"  </span><br><span class="line"><span class="meta">#</span>Linux平台下  </span><br><span class="line"><span class="meta">#</span>echo "Hello,World!"   或 printf "Hello,World!"  </span><br><span class="line"><span class="meta">#</span>如果是写在文件中:  </span><br><span class="line">chmod +x  HelloWorld.sh  </span><br><span class="line">./HelloWorld.sh</span><br></pre></td></tr></table></figure><p>说明</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>Shell 诞生于 Unix，是与 Linux/Unix 交互的工具，单独地学习 Shell 是没有意义的，必须先学习 Linux/Unix。  </span><br><span class="line"><span class="meta">#</span>Shell 虽然是 Unix 的第一个脚本语言，但它是相当优秀的。它结合了延展性与效率，持续保有独具的特色，并不断的被改良，功能更加强大。  </span><br><span class="line"><span class="meta">#</span>缺点：Shell 需要依赖其他程序才能完成大部分的工作，优点：简洁的脚本语言标记方式，比 C 语言编写的程序执行更快、更有效率。</span><br></pre></td></tr></table></figure><h2 id="Delphi"><a href="#Delphi" class="headerlink" title="Delphi"></a>Delphi</h2><p>环境: Delphi 7<br>代码<br>[File|New|Application]–&gt;拖一个Button、一个Label–&gt;双击Button，编码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">procedure TForm1.Button1Click(Sender: TObject);  </span><br><span class="line">begin  </span><br><span class="line">  label1.Caption := <span class="string">'Hello,World!'</span>;  </span><br><span class="line">end;  </span><br><span class="line">  </span><br><span class="line">procedure TForm1.FormCreate(Sender: TObject);  </span><br><span class="line">begin  </span><br><span class="line">  </span><br><span class="line">end;  </span><br><span class="line">  </span><br><span class="line">end.</span><br></pre></td></tr></table></figure><p>说明<br>Delphi，是 Windows 平台下著名的快速应用程序开发工具（Rapid Application Development，简称 RAD）。<br>似乎很多人都觉得 Delphi 已经没落了、过时了（我身边有好多同事都没听过 Delphi）。<br>但我不这么认为，”真正的程序员用 C，聪明的程序员用 Delphi”，经典无需多言，尤其是开发GUI程序，拖一下就 OK 了！！！</p><h2 id="Fortran"><a href="#Fortran" class="headerlink" title="Fortran"></a>Fortran</h2><p>环境: Linux 或者安装了 MinGW 的 Windows 平台</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">D:\HelloWorld&gt;gfortran -v  </span><br><span class="line">Using built-in specs.  </span><br><span class="line">COLLECT_GCC=gfortran  </span><br><span class="line">COLLECT_LTO_WRAPPER=c:/mingw/bin/../libexec/gcc/mingw32/<span class="number">4.8</span>.1/lto-wrapper.exe  </span><br><span class="line">Target: mingw32  </span><br><span class="line">Configured with: ../gcc-<span class="number">4.8</span>.1/configure --prefix=/mingw --host=mingw32 --build=mingw32 --without-pic  </span><br><span class="line"> --enable-shared --enable-<span class="keyword">static</span> --with-gnu-ld --enable-lto --enable-libssp --disable-multilib --ena  </span><br><span class="line">ble-languages=c,c++,fortran,objc,obj-c++,ada --disable-sjlj-exceptions --with-dwarf2 --disable-win32  </span><br><span class="line">-registry --enable-libstdcxx-debug --enable-version-specific-runtime-libs --with-gmp=/usr/src/pkg/gm  </span><br><span class="line">p-<span class="number">5.1</span>.2-<span class="number">1</span>-mingw32-src/bld --with-mpc=/usr/src/pkg/mpc-<span class="number">1.0</span>.1-<span class="number">1</span>-mingw32-src/bld --with-mpfr= --with-sy  </span><br><span class="line">stem-zlib --with-gnu-as --enable-decimal-<span class="keyword">float</span>=yes --enable-libgomp --enable-threads --with-libiconv  </span><br><span class="line">-prefix=/mingw32 --with-libintl-prefix=/mingw --disable-bootstrap LDFLAGS=-s CFLAGS=-D_USE_32BIT_TIM  </span><br><span class="line">E_T  </span><br><span class="line">Thread model: win32  </span><br><span class="line">gcc version <span class="number">4.8</span>.1 (GCC)</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">program hello  </span><br><span class="line">print *,<span class="string">"Hello World!"</span>  </span><br><span class="line">end program hello</span><br></pre></td></tr></table></figure><p>说明<br>Fortran 是最早出现的计算机语言，主要用于科学及工程计算领域，这一点和 Python 相同。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">D:\HelloWorld&gt;gfortran -ffree-form HelloWorld.f -o out.exe  #-ffree-form 自由格式 -o 后面是输出文件  </span><br><span class="line">#后缀名可以为.f, .F, .f90, .fpp. 如果是 .f90 结尾的文件，可以不用 -ffree-form，因为该后缀结尾的文件默认是自由格式  </span><br><span class="line">D:\HelloWorld&gt;out      #如果是 .f 结尾的话，必须要加上，否则报错  </span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure><h2 id="TCL"><a href="#TCL" class="headerlink" title="TCL"></a>TCL</h2><p>环境: Linux 或带有 WinGW 的 Windows 平台</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#命令行交互方式  </span><br><span class="line">D:\&gt;tclsh  </span><br><span class="line">% puts <span class="string">"Hello,World!"</span>  </span><br><span class="line">Hello,World!  </span><br><span class="line">% exit  </span><br><span class="line">D:&gt;  </span><br><span class="line">#文件方式运行  </span><br><span class="line">#!/usr/local/bin/tcl  </span><br><span class="line">puts <span class="string">"Hello, world!"</span>  </span><br><span class="line">D:\&gt;tclsh HelloWorld.tcl  </span><br><span class="line">Hello,World!</span><br></pre></td></tr></table></figure><p>说明</p><ol><li>文件名后缀 .tcl 编译器为 tclsh（命令方式显示）或 wish（GUI方式显示）。</li><li>TCL（Tool Command Language）一种通用的脚本语言，几乎在所有平台都能运行，功能非常强。</li></ol><h2 id="FoxPro"><a href="#FoxPro" class="headerlink" title="FoxPro"></a>FoxPro</h2><p>环境: VFP9.0<br>代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="string">"Hello,World!"</span></span><br></pre></td></tr></table></figure><p>说明<br>尽管编译、运行都通过了，GUI 界面仍然不知道如何显示编译后的结果，还是在命令行界面里运行 .FXP 文件才显示的结果。<br>Visual FoxPro 原名 FoxBase，最初是由美国 Fox Software 公司于 1988 年推出的数据库产品，在 DOS 上运行，与 xBase 系列兼容。FoxPro 是 FoxBase 的加强版，最高版本曾出过 2.6。之后于 1992 年，Fox Software 公司被 Microsoft 收购，加以发展，使其可以在 Windows 上运行，并且更名为 Visual FoxPro。FoxPro 比 FoxBASE 在功能和性能上又有了很大的改进，主要是引入了窗口、按纽、列表框和文本框等控件，进一步提高了系统的开发能力。</p><h2 id="Ada"><a href="#Ada" class="headerlink" title="Ada"></a>Ada</h2><p>环境: ADA95 的 gnat 编译器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">d:\HelloWorld&gt;gnat  </span><br><span class="line">GNAT <span class="number">4.8</span>.1  </span><br><span class="line">Copyright <span class="number">1996</span>-<span class="number">2013</span>, Free Software Foundation, Inc.  </span><br><span class="line">  </span><br><span class="line">List of available commands  </span><br><span class="line">  </span><br><span class="line">gnat bind               gnatbind  </span><br><span class="line">gnat chop               gnatchop  </span><br><span class="line">gnat clean              gnatclean  </span><br><span class="line">gnat compile            gnatmake -f -u -c  </span><br><span class="line">gnat check              gnatcheck  </span><br><span class="line">gnat elim               gnatelim  </span><br><span class="line">gnat find               gnatfind  </span><br><span class="line">gnat krunch             gnatkr  </span><br><span class="line">gnat link               gnatlink  </span><br><span class="line">gnat list               gnatls  </span><br><span class="line">gnat make               gnatmake  </span><br><span class="line">gnat metric             gnatmetric  </span><br><span class="line">gnat name               gnatname  </span><br><span class="line">gnat preprocess         gnatprep  </span><br><span class="line">gnat pretty             gnatpp  </span><br><span class="line">gnat stack              gnatstack  </span><br><span class="line">gnat stub               gnatstub  </span><br><span class="line">gnat test               gnattest  </span><br><span class="line">gnat xref               gnatxref</span><br></pre></td></tr></table></figure><p>说明<br>Ada 是一种表现能力很强的通用程序设计语言，它是美国国防部为克服软件开发危机而研发的。在经过除去 # 行获得最终处理过的文件后即可交由 GNAT 编译。</p><h2 id="AWK"><a href="#AWK" class="headerlink" title="AWK"></a>AWK</h2><p>环境: Linux/Unix 平台，或安装了 MinGW 和 MSYS 的 Windows 平台<br>代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Linux ~]# echo | awk '&#123;print "Hello,World!"&#125;'  </span><br><span class="line">Hello,World!  </span><br><span class="line">[root@Linux ~]# echo | awk 'BEGIN &#123;print "Hello,World!"&#125;'</span><br><span class="line">Hello,World!  </span><br><span class="line">[root@Linux ~]# awk 'BEGIN &#123;print "Hello,World!"&#125;'  </span><br><span class="line">Hello,World!  </span><br><span class="line">[root@Linux ~]# echo "hello world" | awk '&#123;print&#125;'  </span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><p>说明</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#AWK 是一种优良的文本处理工具。它不仅是 Linux 中也是任何环境中现有的功能最强大的数据处理引擎之一。&lt;br /&gt;</span><br><span class="line">#AWK 名称得自于它的创始人，分别是 Alfred Aho、Peter Weinberger 和 Brian Kernighan 姓氏的首个字母。&lt;br /&gt;</span><br><span class="line">#AWK 提供了极其强大的功能：可以进行样式装入、流控制、数学运算符、进程控制语句甚至于内置的变量和函数。它具备了一个完整的语言所应具有的几乎所有精美特性。</span><br></pre></td></tr></table></figure><h2 id="Sed"><a href="#Sed" class="headerlink" title="Sed"></a>Sed</h2><p>环境: Linux/Unix<br>代码</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># sed -ne '1s/.*/Hello, world!/p'  </span><br><span class="line">Hello,World!                     #第一行为输入  </span><br><span class="line">Hello, world!                    #</span><br></pre></td></tr></table></figure><p>说明<br>sed 流编辑器，和 awk、正则表达式等一起，是编写 Linux 脚本中非常有用的工具。</p><h2 id="Pascal"><a href="#Pascal" class="headerlink" title="Pascal"></a>Pascal</h2><p>环境: Free Pacal IDE<br>代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Program <span class="title">HelloWorld</span><span class="params">(output)</span></span>;  </span><br><span class="line">begin  </span><br><span class="line">  writeln(<span class="string">'Hello, world!'</span>) </span><br><span class="line"></span><br><span class="line"> &#123;程序块的最后一条语句后不需要<span class="string">";"</span> - 如果添加一个<span class="string">";"</span>，会在程序中增加一个“空语句”&#125;  </span><br><span class="line">end.</span><br></pre></td></tr></table></figure><p>说明<br>Pascal 程序开始于外部文件描述符作为参数的 program 关键字；然后跟着 begin 和 end 关键字封装的主要块。分号分区语句，句点终结整个程序（或单元）。Pascal 源代码是大小写不敏感的。这里是一个非常简单的”Hello world”程序示例的源代码，在实际编程中，通常可以省略第一行的output。从语法整理上来看，很像 Delphi，基本上是一个等级的。另外，FPC 编译器安装后，居然显示是乱码，看来还是要下载（Turbo Pascal）更经典些，不过听说 Turbo Pascal 下载比较难，再说，能不能在 WIN*64 位的平台编译也不知道，就下了个 FPC 用用。</p><h2 id="Prolog"><a href="#Prolog" class="headerlink" title="Prolog"></a>Prolog</h2><p>环境: SWI-PrologPortable 编译器</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">write(<span class="string">"Hello,World!"</span>).    </span><br><span class="line">#注意，句末有点号</span><br></pre></td></tr></table></figure><p>说明<br>Prolog（Programming in Logic）是一种逻辑编程语言。它建立在逻辑学的理论基础之上，最初被运用于自然语言等研究领域。现已广泛地应用在人工智能的研究中，可以用来建造专家系统、自然语言理解、智能知识库等。</p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>IEEE Spectrum 根据十多个数据来源，对各大编程语言的使用普及率进行了统计，公布了 2014 年编程语言总排行榜前二十名、Web 开发语言排行榜前十名以及移动应用开发语言排行榜前十名。统计数据结果如下:</p><p>总排行榜：</p><h4 id="Web-开发排行-TOP10："><a href="#Web-开发排行-TOP10：" class="headerlink" title="Web 开发排行 TOP10："></a>Web 开发排行 TOP10：</h4><ul><li>Java</li><li>Python</li><li>C#</li><li>PHP</li><li>JavaScript</li><li>Ruby</li><li>Perl</li><li>HTML</li><li>Scala</li><li>Go</li></ul><h4 id="移动应用开发语言排行-TOP10："><a href="#移动应用开发语言排行-TOP10：" class="headerlink" title="移动应用开发语言排行 TOP10："></a>移动应用开发语言排行 TOP10：</h4><ul><li>Java</li><li>C</li><li>C++</li><li>C#</li><li>JavaScript</li><li>Objective-C</li><li>Scala</li><li>Delphi</li><li>Scheme</li><li>ActionScript</li></ul><p><em>以上统计数据分别来自 Google 搜索结果、Google 趋势分析、推特、GitHub 库、StackOverflow 问答、Reddit 文章、Hacker News、Career Builder、ice job 以及 IEEE 期刊论文等。</em></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2016/03/04/hello-world/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
